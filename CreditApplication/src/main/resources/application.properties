spring.profiles.active=production 

server.port=8080

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "first_sec"
spring.datasource.url = jdbc:mysql://localhost:3306/EasyFinancingCreditApplication?useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC

# Username and password
spring.datasource.username = root
spring.datasource.password = yop49JZ

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.format_sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


#------------------------------------------------

# Kafka settings

spring.cloud.stream.kafka.binder.brokers=localhost:9092

# Outgoing events
spring.cloud.stream.bindings.creditApplicationOut.destination=CreditApplicationEnteredTopic
spring.cloud.stream.bindings.creditApplicationOut.contentType=application/json

# incoming events

spring.cloud.stream.bindings.scoringNegativeIn.destination=CreditApplicationScoringNegativeTopic
spring.cloud.stream.bindings.scoringNegativeIn.group=ApplicationProcess-CreditApplicationEntered-Group
spring.cloud.stream.bindings.scoringNegativeIn.contentType=application/json

spring.cloud.stream.bindings.scoringPositiveIn.destination=CreditApplicationScoringPositiveTopic
spring.cloud.stream.bindings.scoringPositiveIn.group=ApplicationProcess-CreditApplicationEntered-Group
spring.cloud.stream.bindings.scoringPositiveIn.contentType=application/json


spring.cloud.stream.bindings.cityCheckNegativeIn.destination=CreditApplicationCityCheckNegativeTopic
spring.cloud.stream.bindings.cityCheckNegativeIn.group=ApplicationProcess-CreditApplicationCityCheckEntered-Group
spring.cloud.stream.bindings.cityCheckNegativeIn.contentType=application/json

spring.cloud.stream.bindings.cityCheckPositiveIn.destination=CreditApplicationCityCheckPositiveTopic
spring.cloud.stream.bindings.cityCheckPositiveIn.group=ApplicationProcess-CreditApplicationCityCheckEntered-Group
spring.cloud.stream.bindings.cityCheckPositiveIn.contentType=application/json
